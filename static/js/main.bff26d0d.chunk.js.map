{"version":3,"sources":["App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/TableItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","isActive","classNames","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","useParams","sex","name","TableItem","people","born","died","motherName","fatherName","getParent","useMemo","parentName","find","parent","mother","father","motherNameText","fatherNameText","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","isTableVisible","length","useEffect","data","catch","finally","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bff26d0d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\n\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getLinkClass}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={getLinkClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <Link\n      to={slug ? `../${person.slug}` : `${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const TableItem: React.FC<Props> = ({ person, people }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const getParent = useMemo(() => {\n    return (parentName: string | null) => {\n      return people.find(parent => parent.name === parentName);\n    };\n  }, [people]);\n\n  const mother = getParent(motherName);\n  const father = getParent(fatherName);\n  const motherNameText = motherName || '-';\n  const fatherNameText = fatherName || '-';\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td><PersonLink person={person} /></td>\n\n      <td>\n        {sex}\n      </td>\n\n      <td>\n        {born}\n      </td>\n\n      <td>\n        {died}\n      </td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : motherNameText}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : fatherNameText}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../types';\nimport { TableItem } from './TableItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <TableItem\n            key={person.name}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types/Person';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const isTableVisible = !isLoading && !hasError && people.length > 0;\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {!isLoading && !hasError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isTableVisible && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst root = createRoot(document.getElementById('root') as HTMLElement);\n\nroot.render(<Root />);\n"],"sourceRoot":""}